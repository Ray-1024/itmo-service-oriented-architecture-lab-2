openapi: 3.0.3

info:
  title: Service-oriented architecture. Lab 1
  description: Route collection manipulating service
  version: 1.0.0

servers:
  - url: 'http://localhost:22400/api/v1'
    description: Collection service

tags:
  - name: CRUD route collection operations
    description: CRUD operations for route collection
  - name: Additional route collection operations
    description: Additional operations for route collection

paths:
  /routes:
    get:
      servers:
        - url: 'http://localhost:22400/api/v1'
      tags:
        - CRUD route collection operations
      summary: Get list of all routes with sorting, filtering and pagination
      operationId: getRoutes
      parameters:
        - name: size
          in: query
          description: Page size
          required: false
          schema:
            type: integer
            default: 5
            minimum: 1
            maximum: 100
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: sort
          in: query
          description: Sorting arguments array. Use '<' for descending order.
          required: false
          schema:
            type: array
            items:
              type: string
              example: <id
              pattern: '^<{0,1}(id|name|coordinates\.x|coordinates\.y|creationDate|from\.x|from\.y|from\.z|from\.name|to\.x|to\.y|to\.name|distance)$'
          explode: true
        - name: filter
          in: query
          required: false
          description: Filtering arguments array. Use one of '=', '!=', '>', '<', '>=', '<=' between field and arguments
          schema:
            type: array
            items:
              type: string
              example: id=3
              pattern: '^(id|name|coordinates\.x|coordinates\.y|creationDate|from\.x|from\.y|from\.z|from\.name|to\.x|to\.y|to\.name|distance)(=|!=|>|<|>=|<=)(.+)$'
          explode: true
      responses:
        '200':
          description: Routes list
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: response
                required:
                  - routes
                  - maxPageNumber
                properties:
                  routes:
                    type: array
                    xml:
                      name: routes
                      wrapped: true
                    items:
                      $ref: '#/components/schemas/RouteWithAutogeneratedFields'
                  currentPageNumber:
                    type: integer
                    format: int32
                    minimum: 1
                    example: 1
                    nullable: false
                  pageSize:
                    type: integer
                    format: int32
                    minimum: 1
                    example: 5
                    nullable: false
                  maxPageNumber:
                    type: integer
                    format: int32
                    minimum: 1
                    example: 1
                    nullable: false
        '400':
          description: Invalid query param
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: response
                properties:
                  invalidParams:
                    type: array
                    xml:
                      name: invalidParams
                      wrapped: true
                    items:
                      allOf:
                        - type: object
                          xml:
                            name: invalidParam
                        - type: object
                          properties:
                            paramName:
                              type: string
                            message:
                              type: string
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Returned for other errors
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      servers:
        - url: 'http://localhost:22400/api/v1'
      tags:
        - CRUD route collection operations
      summary: Create new route
      operationId: createRoute
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/Route'
      responses:
        '200':
          description: Returns the created Route
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/RouteWithAutogeneratedFields'
        '422':
          description: Invalid input
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: response
                properties:
                  invalidParams:
                    type: array
                    xml:
                      name: invalidParams
                      wrapped: true
                    items:
                      allOf:
                        - type: object
                          xml:
                            name: invalidParam
                        - type: object
                          properties:
                            paramName:
                              type: string
                            message:
                              type: string
                  error:
                    $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

  /routes/{id}:
    get:
      servers:
        - url: 'http://localhost:22400/api/v1'
      tags:
        - CRUD route collection operations
      summary: Get route by ID
      operationId: getRoute
      parameters:
        - name: id
          in: path
          description: route id
          required: true
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 1
            example: 1
      responses:
        '200':
          description: Returns Route
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/RouteWithAutogeneratedFields'
        '400':
          description: Invalid query param
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Returned for other errors
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      servers:
        - url: 'http://localhost:22400/api/v1'
      tags:
        - CRUD route collection operations
      summary: Modify route by ID
      operationId: modifyRoute
      parameters:
        - name: id
          in: path
          description: route id
          required: true
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 1
            example: 1
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/Route'
      responses:
        '200':
          description: Returns the updated Route
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/RouteWithAutogeneratedFields'
        '422':
          description: Invalid body param
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: response
                properties:
                  invalidParams:
                    type: array
                    xml:
                      name: invalidParams
                      wrapped: true
                    items:
                      allOf:
                        - type: object
                          xml:
                            name: invalidParam
                        - type: object
                          properties:
                            paramName:
                              type: string
                            message:
                              type: string
                  error:
                    $ref: '#/components/schemas/Error'
        '400':
          description: Invalid query param
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Returned for other errors
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      servers:
        - url: 'http://localhost:22400/api/v1'
      tags:
        - CRUD route collection operations
      summary: Delete route by ID
      operationId: deleteRoute
      parameters:
        - name: id
          in: path
          description: route id
          required: true
          schema:
            type: integer
            format: int64
            nullable: false
            minimum: 1
            example: 1
      responses:
        '204':
          description: The route was successfully deleted
          content: { }
        '400':
          description: Invalid query param
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Returned for other errors
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

  /routes/name-groups-info:
    get:
      servers:
        - url: 'http://localhost:22400/api/v1'
      tags:
        - Additional route collection operations
      summary: group routes by id and return groups size
      operationId: getIdGroupsSize
      responses:
        '200':
          description: name groups info
          content:
            application/xml:
              schema:
                type: array
                xml:
                  name: groups
                  wrapped: true
                items:
                  allOf:
                    - type: object
                      xml:
                        name: group
                      properties:
                        name:
                          type: string
                          example: group 1
                        count:
                          type: number
                          format: int64
                          minimum: 1
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Returned for other errors
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

  /routes/with-distance-count:
    get:
      servers:
        - url: 'http://localhost:22400/api/v1'
      tags:
        - Additional route collection operations
      summary: Returns routes with distance field equals arg
      operationId: getFlatsCountByTransportGreaterThan
      parameters:
        - name: distance
          in: query
          description: distance for counting
          required: true
          example: 3.1415
          schema:
            type: number
            format: float
      responses:
        '200':
          description: Count of routes with distance field equals param
          content:
            application/xml:
              schema:
                type: integer
                format: int32
                example: 10
                xml:
                  name: count
        '400':
          description: Invalid query param
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Returns for other errors
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:

    Coordinates:
      type: object
      required:
        - x
        - y
      properties:
        x:
          type: number
          format: double
          nullable: false
          maximum: 510
          example: 100.9
        y:
          type: number
          format: double
          nullable: false
          example: 200.5

    Location:
      type: object
      required:
        - x
        - y
        - z
        - name
      properties:
        x:
          type: number
          format: float
          nullable: false
          example: 12.34
        y:
          type: number
          format: float
          nullable: false
          example: 23.45
        z:
          type: number
          format: float
          nullable: false
          example: 34.56
        name:
          type: string
          nullable: false
          maxLength: 452
          example: Masha

    Route:
      type: object
      required:
        - name
        - coordinates
        - to
        - distance
      properties:
        name:
          type: string
          nullable: false
          minLength: 1
          example: Route №1203
        coordinates:
          allOf:
            - type: object
              xml:
                name: coordinates
            - $ref: '#/components/schemas/Coordinates'
        from:
          allOf:
            - type: object
              xml:
                name: from
            - $ref: '#/components/schemas/Location'
        to:
          allOf:
            - type: object
              xml:
                name: to
            - $ref: '#/components/schemas/Location'
        distance:
          type: number
          format: float
          nullable: false
          minimum: 1
          exclusiveMinimum: true
      xml:
        name: route

    RouteWithAutogeneratedFields:
      allOf:
        - type: object
          required:
            - id
            - creationDate
          properties:
            id:
              type: integer
              format: int64
              nullable: false
              minimum: 1
              example: 1
              description: unique identifier of route
            creationDate:
              type: string
              format: date-time
              nullable: false
              example: 2024-10-05T00:00:10Z
        - $ref: '#/components/schemas/Route'

    Error:
      type: object
      xml:
        name: error
      required:
        - message
        - time
      properties:
        message:
          type: string
          example: error message
        time:
          type: string
          format: date-time
          example: "2024-09-10T00:00:00Z"