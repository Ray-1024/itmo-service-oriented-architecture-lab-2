openapi: 3.0.3

info:
  title: Service-oriented architecture. Lab 1
  description: Navigator service
  version: 1.0.0

servers:
  - url: 'http://localhost:22401/api/v1/navigator'
    description: Navigator service

tags:
  - name: Navigator operations

paths:
  /routes/{name-from}/{name-to}/{order-by}:
    get:
      servers:
        - url: 'http://localhost:22401/api/v1/navigator'
      tags:
        - Navigator operations
      summary: find all routes between the specified locations, sort the list by the specified parameter
      operationId: findAllRoutesBetweenLocations
      parameters:
        - name: name-from
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            example: location 1
        - name: name-to
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            example: location 2
        - name: order-by
          in: path
          required: true
          schema:
            type: string
            example: <id
            pattern: '^<{0,1}(id|name|coordinates\.x|coordinates\.y|creationDate|from\.x|from\.y|from\.z|from\.name|to\.x|to\.y|to\.name|distance)$'
      responses:
        '200':
          description: List of routes between locations
          content:
            application/xml:
              schema:
                type: array
                xml:
                  name: routes
                  wrapped: true
                items:
                  $ref: './collection-service.yaml#/components/schemas/RouteWithAutogeneratedFields'
        '400':
          description: Invalid query param
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: response
                properties:
                  invalidParams:
                    type: array
                    xml:
                      name: invalidParams
                      wrapped: true
                    items:
                      allOf:
                        - type: object
                          xml:
                            name: invalidParam
                        - type: object
                          properties:
                            paramName:
                              type: string
                            message:
                              type: string
                  error:
                    $ref: './collection-service.yaml#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                $ref: './collection-service.yaml#/components/schemas/Error'
        '503':
          description: Collection service access error
          content:
            application/xml:
              schema:
                $ref: './collection-service.yaml#/components/schemas/Error'
        '404':
          description: Returned for other errors
          content:
            application/xml:
              schema:
                $ref: './collection-service.yaml#/components/schemas/Error'

  /route/add/{name-from}/{name-to}/{distance}:
    post:
      servers:
        - url: 'http://localhost:22401/api/v1/navigator'
      tags:
        - Navigator operations
      summary: add new route between locations
      operationId: createNewRouteBetweenLocations
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              type: object
              xml:
                name: response
              required:
                - coordinates
                - name
              properties:
                coordinates:
                  $ref: './collection-service.yaml#/components/schemas/Coordinates'
                name:
                  type: string
                  nullable: false
                  minLength: 1
                  example: Route â„–1203
      parameters:
        - name: name-from
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            example: location 1
        - name: name-to
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            example: location 2
        - name: distance
          in: path
          required: true
          schema:
            type: number
            format: float
            minimum: 0
            example: 1.2

      responses:
        '200':
          description: Created route
          content:
            application/xml:
              schema:
                $ref: './collection-service.yaml#/components/schemas/RouteWithAutogeneratedFields'
        '400':
          description: Invalid input
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: response
                properties:
                  invalidParams:
                    type: array
                    xml:
                      name: invalidParams
                      wrapped: true
                    items:
                      allOf:
                        - type: object
                          xml:
                            name: invalidParam
                        - type: object
                          properties:
                            paramName:
                              type: string
                            message:
                              type: string
                  error:
                    $ref: './collection-service.yaml#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/xml:
              schema:
                $ref: './collection-service.yaml#/components/schemas/Error'
        '503':
          description: Collection service access error
          content:
            application/xml:
              schema:
                $ref: './collection-service.yaml#/components/schemas/Error'
        '404':
          description: Returned for other errors
          content:
            application/xml:
              schema:
                $ref: './collection-service.yaml#/components/schemas/Error'
